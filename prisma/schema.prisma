generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Restaurant {
  id                    String      @id @default(cuid())
  //common fields in both databases
  detailedTitle         String?
  ratingOverall         String?
  ratingOverallNumber   String?
  restaurantWebsiteLink String?
  locationAddress       String?
  restaurantLat         Float?
  restaurantLng         Float?
  generalFeatures       String?     @db.LongText
  priceSelector         String?
  telephoneNumber       String?
  restaurantEmail       String?
  restaurantLink        String      @db.LongText
  restaurantMenuLink    String?     @db.LongText
  openDates             openDates[]
  restaurantExplanation String?     @db.LongText

  //only google
  googleType            String?
  webResults            webResults[]

  //only trip
  isTripAdvisorVerified Boolean?
  categoryList          categoryList[]

  //both
  images    images[]
  reviews   reviews[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model openDates {
  id           String     @id @default(cuid())
  day          String?
  hours        String?
  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

model webResults {
  id           String     @id @default(cuid())
  title        String?
  link         String?     @db.LongText
  content      String?     @db.LongText
  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}


model images {
  id           String     @id @default(cuid())
  url          String?
  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

model reviews {
  id               String  @id @default(cuid())
  ratingValue      Int?
  ratingContent    String? @db.LongText
  ratingPerson     String?
  ratingPersonType String?
  ratingDate       String?

  //only trip
  ratingWithWho String?
  ratingTitle   String?
  ratingPics    String? @db.LongText

  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

model categoryList {
  id           String     @id @default(cuid())
  category     String?
  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

